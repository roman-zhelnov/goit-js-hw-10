{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = String(Math.floor(ms / day)).padStart(2, '0');\n  const hours = String(Math.floor((ms % day) / hour)).padStart(2, '0');\n  const minutes = String(Math.floor(((ms % day) % hour) / minute)).padStart(\n    2,\n    '0'\n  );\n  const seconds = String(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  ).padStart(2, '0');\n  return { days, hours, minutes, seconds };\n}\n\nconst buttonEl = document.querySelector('button[data-start]');\nconst inputEl = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('span[data-days]');\nconst hoursEl = document.querySelector('span[data-hours]');\nconst minutesEl = document.querySelector('span[data-minutes]');\nconst secondsEl = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate.getTime() < Date.now) {\n      buttonEl.disabled = false;\n      iziToast.warning({\n        position: 'center',\n        backgroundColor: 'red',\n        messageColor: 'black',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      buttonEl.disabled = true;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction recordingTimerDisplay({ days, hours, minutes, seconds }) {\n  daysEl.textContent = days;\n  hoursEl.textContent = hours;\n  minutesEl.textContent = minutes;\n  secondsEl.textContent = seconds;\n}\n\nbuttonEl.addEventListener('click', madeBtnClick);\n\nfunction madeBtnClick() {\n  inputEl.disabled = true;\n  buttonEl.disabled = true;\n\n  const intervalId = setInterval(() => {\n    let diff = userSelectedDate - Date.now();\n\n    if (diff <= 0) {\n      inputEl.disabled = false;\n      clearInterval(intervalId);\n      recordingTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      return;\n    }\n    const timeLeft = convertMs(diff);\n    recordingTimerDisplay(timeLeft);\n  }, 1000);\n}\n"],"names":["convertMs","ms","days","hours","minutes","seconds","buttonEl","inputEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","recordingTimerDisplay","madeBtnClick","intervalId","diff","timeLeft"],"mappings":"2GAKA,SAASA,EAAUC,EAAI,CAMrB,MAAMC,EAAO,OAAO,KAAK,MAAMD,EAAK,KAAG,CAAC,EAAE,SAAS,EAAG,GAAG,EACnDE,EAAQ,OAAO,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EAAE,SAAS,EAAG,GAAG,EAC7DG,EAAU,OAAO,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,CAAC,EAAE,SAC/D,EACA,GACJ,EACQI,EAAU,OACd,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAAI,SAAS,EAAG,GAAG,EACjB,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAS,SAAS,cAAc,iBAAiB,EACjDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAY,SAAS,cAAc,oBAAoB,EAE7D,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAiB,UAAY,KAAK,KACpCN,EAAS,SAAW,GACpBS,EAAS,QAAQ,CACf,SAAU,SACV,gBAAiB,MACjB,aAAc,QACd,QAAS,oCACjB,CAAO,GAEDT,EAAS,SAAW,EAEvB,CACH,EAEAU,EAAUT,EAASM,CAAO,EAE1B,SAASI,EAAsB,CAAE,KAAAf,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAChEG,EAAO,YAAcN,EACrBO,EAAQ,YAAcN,EACtBO,EAAU,YAAcN,EACxBO,EAAU,YAAcN,CAC1B,CAEAC,EAAS,iBAAiB,QAASY,CAAY,EAE/C,SAASA,GAAe,CACtBX,EAAQ,SAAW,GACnBD,EAAS,SAAW,GAEpB,MAAMa,EAAa,YAAY,IAAM,CACnC,IAAIC,EAAOR,EAAmB,KAAK,IAAG,EAEtC,GAAIQ,GAAQ,EAAG,CACbb,EAAQ,SAAW,GACnB,cAAcY,CAAU,EACxBF,EAAsB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACnE,MACD,CACD,MAAMI,EAAWrB,EAAUoB,CAAI,EAC/BH,EAAsBI,CAAQ,CAC/B,EAAE,GAAI,CACT"}